.ft-input-component {
  position: relative;
}

body[dir='ltr'] .ft-input-component.search.showClearTextButton {
  padding-left: 30px;
}

body[dir='rtl'] .ft-input-component.search.showClearTextButton {
  padding-right: 30px;
}

body[dir='ltr'] .ft-input-component.search.clearTextButtonVisible,
body[dir='ltr'] .ft-input-component.search.showClearTextButton:focus-within {
  padding-left: 0;
}

body[dir='rtl'] .ft-input-component.search.clearTextButtonVisible,
body[dir='rtl'] .ft-input-component.search.showClearTextButton:focus-within {
  padding-right: 0;
}

body[dir='ltr'] .ft-input-component.showClearTextButton:not(.search) .ft-input {
  padding-left: 46px;
}

body[dir='rtl'] .ft-input-component.showClearTextButton:not(.search) .ft-input {
  padding-right: 46px;
}

/* Main search input */
body[dir='ltr'] .clearTextButtonVisible.search .ft-input,
body[dir='ltr'] .ft-input-component.search.showClearTextButton:focus-within .ft-input {
  padding-left: 46px;
}

body[dir='rtl'] .clearTextButtonVisible.search .ft-input,
body[dir='rtl'] .ft-input-component.search.showClearTextButton:focus-within .ft-input {
  padding-right: 46px;
}

.ft-input-component:focus-within .clearInputTextButton {
  opacity: 0.5;
}

.clearTextButtonVisible .clearInputTextButton.visible,
.ft-input-component:focus-within .clearInputTextButton.visible {
  cursor: pointer;
  opacity: 1;
}

.disabled label, .disabled .ft-input{
  opacity: 0.4;
  cursor: not-allowed;
}

.clearInputTextButton {
  position: absolute;
  top: 5px;
  /* To be higher than `.inputWrapper` */
  z-index: 1;
  margin: 0 3px;
  padding: 10px;
  border-radius: 100%;
  color: var(--primary-text-color);
  opacity: 0;
  -moz-transition: background 0.2s ease-in;
  -o-transition: background 0.2s ease-in;
  transition: background 0.2s ease-in;
}

body[dir='ltr'] .clearInputTextButton {
  left: 0;
}

body[dir='rtl'] .clearInputTextButton {
  right: 0;
}

.clearInputTextButton.visible:hover {
  background-color: var(--side-nav-hover-color);
}

.forceTextColor .clearInputTextButton:hover {
  background-color: var(--primary-color-hover);
}

.clearInputTextButton.visible:active {
  background-color: var(--tertiary-text-color);
  -moz-transition: background 0.2s ease-in;
  -o-transition: background 0.2s ease-in;
  transition: background 0.2s ease-in;
}

.search .clearInputTextButton {
  top: 12px;
}

.forceTextColor .clearInputTextButton {
  color: #EEEEEE;
}

.forceTextColor .clearInputTextButton:active {
  background-color: var(--primary-color-active);
}

.ft-input {
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  outline: none;
  width: 100%;
  padding: 1rem;
  border: none;
  margin-bottom: 10px;
  font-size: 16px;
  height: 45px;
  color: var(--secondary-text-color);
  border-radius: 5px;
  background-color: var(--search-bar-color);
}

.ft-input-component ::-webkit-input-placeholder {
  color: var(--tertiary-text-color);
}

.forceTextColor .ft-input {
  color: #EEEEEE;
  background-color: var(--primary-input-color);
}

.forceTextColor .ft-input:focus {
  box-shadow: 0 0 1rem 0 var(--primary-input-color);
  -moz-transition: box-shadow 0.2s ease-in-out;
  -o-transition: box-shadow 0.2s ease-in-out;
  transition: box-shadow 0.2s ease-in-out;
}

.forceTextColor ::-webkit-input-placeholder {
  color: #EEEEEE;
}

.inputWrapper {
  position: relative;
}

.inputAction {
  position: absolute;
  margin: 0 3px;
  padding: 10px;
  top: -8px;
  border-radius: 100%;
  color: var(--primary-text-color);
  /* this should look disabled by default */
  opacity: 50%;
}

body[dir='ltr'] .inputAction {
  right: 0;
}

body[dir='rtl'] .inputAction {
  left: 0;
}

.inputAction.enabled {
  opacity: 100%;
  /* Only look respond to cursor when enabled */
  cursor: pointer;
}


.search ::-webkit-calendar-picker-indicator {
  display: none;
}

.forceTextColor .inputAction {
  color: #EEEEEE;
}

body[dir='ltr'] .ft-input-component.showActionButton .ft-input {
  /*
  With arrow present means
  the text might get under the arrow with normal padding
   */
  padding-right: calc(36px + 6px);
}

body[dir='rtl'] .ft-input-component.showActionButton .ft-input {
  /*
  With arrow present means
  the text might get under the arrow with normal padding
   */
  padding-left: calc(36px + 6px);
}

.inputAction.enabled:hover {
  background-color: var(--side-nav-hover-color);
  -moz-transition: background 0.2s ease-in;
  -o-transition: background 0.2s ease-in;
  transition: background 0.2s ease-in;
}

.forceTextColor .inputAction.enabled:hover {
  background-color: var(--primary-color-hover);
}

.inputAction.enabled:active {
  background-color: var(--tertiary-text-color);
  -moz-transition: background 0.2s ease-in;
  -o-transition: background 0.2s ease-in;
  transition: background 0.2s ease-in;
}

.forceTextColor .inputAction.enabled:active {
  background-color: var(--primary-color-active);
}

.list {
  position: absolute;
  width: 100%;
  list-style: none;
  margin: 0;
  padding: 5px 0;
  z-index: 10;
  border-radius: 0 0 5px 5px;
  word-wrap: break-word;
  box-shadow: 0 0 10px var(--scrollbar-color-hover);
  background-color: var(--search-bar-color);
}

.list li {
  display: block;
  padding: 0 15px;
  line-height: 2rem;
}

.hover {
  background-color: var(--scrollbar-color-hover);
/*   color: white; */
}
